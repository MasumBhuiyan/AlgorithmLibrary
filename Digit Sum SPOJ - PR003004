#include <bits/stdc++.h>

using namespace std;

using D   = double;
using LL  = long long;
using VI  = vector<int>; 
using PII = pair<int,int>;

const int N = 3e5 + 35;
const int INF = 2e9 + 29;

string v, l, r;
LL DP[ 17 ][ 3 ][ 2000 ];

LL dfs(int i, bool s, LL val) {
	if( i == v.size() ) return val;

	LL &ret = DP[ i ][ s ][ val ];
	if( ~ret ) return ret;

	int k = v[ i ] - '0';
	if( !s ) k = 9;

	ret = 0LL;
	for(int x = 0; x <= k; x += 1) {
		ret += dfs(i + 1, s && (x == k), val + x );
	}

	return ret;
}

int main() {
	ios_base::sync_with_stdio(0); 
	cin.tie(0); 
	cout.tie(0);
  
	int testcase; 
	cin >> testcase;

	while( testcase-- ) {
		cin >> l >> r;
		memset(DP, -1, sizeof DP);
		v = r;
		LL ans = dfs(0, 1, 0);
		memset(DP, -1, sizeof DP);
		v = l;
		ans -= dfs(0, 1, 0);

		for(int i = 0; l[ i ]; i += 1) {
			ans += (l[ i ] - '0');
		}
		cout << ans << '\n';
	}
	return 0;
}
